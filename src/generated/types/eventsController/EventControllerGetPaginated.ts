/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */

import type { EventPagedDto } from '../EventPagedDto.ts'

export const eventControllerGetPaginatedQueryParamsSortOrderEnum = {
  asc: 'asc',
  desc: 'desc',
} as const

export type EventControllerGetPaginatedQueryParamsSortOrderEnum =
  (typeof eventControllerGetPaginatedQueryParamsSortOrderEnum)[keyof typeof eventControllerGetPaginatedQueryParamsSortOrderEnum]

export type EventControllerGetPaginatedQueryParams = {
  /**
   * @default 10
   * @type number | undefined
   */
  limit?: number | undefined
  /**
   * @default 0
   * @type number | undefined
   */
  page?: number | undefined
  /**
   * @default "created_at"
   * @type string | undefined
   */
  sortBy?: string | undefined
  /**
   * @default "desc"
   * @type string | undefined
   */
  sortOrder?: EventControllerGetPaginatedQueryParamsSortOrderEnum | undefined
  /**
   * @type array | undefined
   */
  ids?: string[] | undefined
}

/**
 * @description Paginated events retrieved successfully
 */
export type EventControllerGetPaginated200 = EventPagedDto

/**
 * @description Unauthorized
 */
export type EventControllerGetPaginated401 = unknown

/**
 * @description Forbidden - Insufficient privileges
 */
export type EventControllerGetPaginated403 = unknown

export type EventControllerGetPaginatedQueryResponse = EventControllerGetPaginated200

export type EventControllerGetPaginatedQuery = {
  Response: EventControllerGetPaginated200
  QueryParams: EventControllerGetPaginatedQueryParams
  Errors: EventControllerGetPaginated401 | EventControllerGetPaginated403
}