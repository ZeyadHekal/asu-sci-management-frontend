/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */

import type { ExamModelForEventDto } from './ExamModelForEventDto.ts'
import type { GroupModelAssignmentDto } from './GroupModelAssignmentDto.ts'
import type { ProposedGroupSimpleDto } from './ProposedGroupSimpleDto.ts'

export const createEventWithGroupsDtoEventTypeEnum = {
  exam: 'exam',
  quiz: 'quiz',
  assignment: 'assignment',
  lab_assignment: 'lab_assignment',
  project: 'project',
  presentation: 'presentation',
  workshop: 'workshop',
  practice: 'practice',
  seminar: 'seminar',
} as const

export type CreateEventWithGroupsDtoEventTypeEnum = (typeof createEventWithGroupsDtoEventTypeEnum)[keyof typeof createEventWithGroupsDtoEventTypeEnum]

export const createEventWithGroupsDtoLocationTypeEnum = {
  lab_devices: 'lab_devices',
  lecture_hall: 'lecture_hall',
  online: 'online',
  hybrid: 'hybrid',
} as const

export type CreateEventWithGroupsDtoLocationTypeEnum = (typeof createEventWithGroupsDtoLocationTypeEnum)[keyof typeof createEventWithGroupsDtoLocationTypeEnum]

export type CreateEventWithGroupsDto = {
  /**
   * @type string
   */
  name: string
  /**
   * @type string | undefined
   */
  description?: string | undefined
  /**
   * @type number
   */
  duration: number
  /**
   * @default "assignment"
   * @type string
   */
  eventType: CreateEventWithGroupsDtoEventTypeEnum
  /**
   * @default "online"
   * @type string
   */
  locationType: CreateEventWithGroupsDtoLocationTypeEnum
  /**
   * @description Custom location when not using lab devices
   * @type string | undefined
   */
  customLocation?: string | undefined
  /**
   * @type boolean
   */
  hasMarks: boolean
  /**
   * @type number | undefined
   */
  totalMarks?: number | undefined
  /**
   * @default false
   * @type boolean
   */
  autoStart: boolean
  /**
   * @description Whether this event requires exam models
   * @default false
   * @type boolean
   */
  requiresModels: boolean
  /**
   * @description Whether this event should be treated as an exam
   * @default false
   * @type boolean
   */
  isExam: boolean
  /**
   * @default 30
   * @type number
   */
  examModeStartMinutes: number
  /**
   * @description When the event should start
   * @type string | undefined, date-time
   */
  startDateTime?: Date | undefined
  /**
   * @type string
   */
  courseId: string
  /**
   * @description Proposed groups for the event
   * @type array
   */
  proposedGroups: ProposedGroupSimpleDto[]
  /**
   * @description Exam models for the event (only for exams)
   * @type array | undefined
   */
  examModels?: ExamModelForEventDto[] | undefined
  /**
   * @description Model assignments to groups (only for exams)
   * @type array | undefined
   */
  groupModelAssignments?: GroupModelAssignmentDto[] | undefined
}