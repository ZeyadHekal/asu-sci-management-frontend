/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */

import client from '../../../global/api/apiClient'
import type { RequestConfig, ResponseConfig, ResponseErrorConfig } from '../../../global/api/apiClient'
import type { UseMutationOptions, QueryClient } from '@tanstack/react-query'
import type {
  CourseAccessControllerGrantMultipleSectionsAccessMutationRequest,
  CourseAccessControllerGrantMultipleSectionsAccessMutationResponse,
  CourseAccessControllerGrantMultipleSectionsAccess400,
  CourseAccessControllerGrantMultipleSectionsAccess401,
  CourseAccessControllerGrantMultipleSectionsAccess403,
  CourseAccessControllerGrantMultipleSectionsAccess404,
} from '../../types/course-accessController/CourseAccessControllerGrantMultipleSectionsAccess.ts'
import { useMutation } from '@tanstack/react-query'

export const courseAccessControllerGrantMultipleSectionsAccessMutationKey = () => [{ url: '/course-access/permissions/grant-multiple-sections' }] as const

export type CourseAccessControllerGrantMultipleSectionsAccessMutationKey = ReturnType<typeof courseAccessControllerGrantMultipleSectionsAccessMutationKey>

/**
 * @description Grant access permissions to an assistant for multiple course sections at once
 * @summary Grant access to multiple sections
 * {@link /course-access/permissions/grant-multiple-sections}
 */
export async function courseAccessControllerGrantMultipleSectionsAccess(
  data: CourseAccessControllerGrantMultipleSectionsAccessMutationRequest,
  config: Partial<RequestConfig<CourseAccessControllerGrantMultipleSectionsAccessMutationRequest>> & { client?: typeof client } = {},
) {
  const { client: request = client, ...requestConfig } = config

  const res = await request<
    CourseAccessControllerGrantMultipleSectionsAccessMutationResponse,
    ResponseErrorConfig<
      | CourseAccessControllerGrantMultipleSectionsAccess400
      | CourseAccessControllerGrantMultipleSectionsAccess401
      | CourseAccessControllerGrantMultipleSectionsAccess403
      | CourseAccessControllerGrantMultipleSectionsAccess404
    >,
    CourseAccessControllerGrantMultipleSectionsAccessMutationRequest
  >({ method: 'POST', url: `/course-access/permissions/grant-multiple-sections`, data, ...requestConfig })
  return res
}

/**
 * @description Grant access permissions to an assistant for multiple course sections at once
 * @summary Grant access to multiple sections
 * {@link /course-access/permissions/grant-multiple-sections}
 */
export function useCourseAccessControllerGrantMultipleSectionsAccess<TContext>(
  options: {
    mutation?: UseMutationOptions<
      ResponseConfig<CourseAccessControllerGrantMultipleSectionsAccessMutationResponse>,
      ResponseErrorConfig<
        | CourseAccessControllerGrantMultipleSectionsAccess400
        | CourseAccessControllerGrantMultipleSectionsAccess401
        | CourseAccessControllerGrantMultipleSectionsAccess403
        | CourseAccessControllerGrantMultipleSectionsAccess404
      >,
      { data: CourseAccessControllerGrantMultipleSectionsAccessMutationRequest },
      TContext
    > & { client?: QueryClient }
    client?: Partial<RequestConfig<CourseAccessControllerGrantMultipleSectionsAccessMutationRequest>> & { client?: typeof client }
  } = {},
) {
  const { mutation: { client: queryClient, ...mutationOptions } = {}, client: config = {} } = options ?? {}
  const mutationKey = mutationOptions?.mutationKey ?? courseAccessControllerGrantMultipleSectionsAccessMutationKey()

  return useMutation<
    ResponseConfig<CourseAccessControllerGrantMultipleSectionsAccessMutationResponse>,
    ResponseErrorConfig<
      | CourseAccessControllerGrantMultipleSectionsAccess400
      | CourseAccessControllerGrantMultipleSectionsAccess401
      | CourseAccessControllerGrantMultipleSectionsAccess403
      | CourseAccessControllerGrantMultipleSectionsAccess404
    >,
    { data: CourseAccessControllerGrantMultipleSectionsAccessMutationRequest },
    TContext
  >(
    {
      mutationFn: async ({ data }) => {
        return courseAccessControllerGrantMultipleSectionsAccess(data, config)
      },
      mutationKey,
      ...mutationOptions,
    },
    queryClient,
  )
}