/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */

import client from '../../../global/api/apiClient'
import type { RequestConfig, ResponseConfig, ResponseErrorConfig } from '../../../global/api/apiClient'
import type { UseMutationOptions, QueryClient } from '@tanstack/react-query'
import type {
  StaffRequestControllerRejectMutationRequest,
  StaffRequestControllerRejectMutationResponse,
  StaffRequestControllerRejectPathParams,
  StaffRequestControllerReject400,
  StaffRequestControllerReject401,
  StaffRequestControllerReject403,
  StaffRequestControllerReject404,
} from '../../types/staff-requestsController/StaffRequestControllerReject.ts'
import { useMutation } from '@tanstack/react-query'

export const staffRequestControllerRejectMutationKey = () => [{ url: '/staff-requests/{id}/reject' }] as const

export type StaffRequestControllerRejectMutationKey = ReturnType<typeof staffRequestControllerRejectMutationKey>

/**
 * @description Reject a pending staff request
 * @summary Reject staff request
 * {@link /staff-requests/:id/reject}
 */
export async function staffRequestControllerReject(
  id: StaffRequestControllerRejectPathParams['id'],
  data: StaffRequestControllerRejectMutationRequest,
  config: Partial<RequestConfig<StaffRequestControllerRejectMutationRequest>> & { client?: typeof client } = {},
) {
  const { client: request = client, ...requestConfig } = config

  const res = await request<
    StaffRequestControllerRejectMutationResponse,
    ResponseErrorConfig<StaffRequestControllerReject400 | StaffRequestControllerReject401 | StaffRequestControllerReject403 | StaffRequestControllerReject404>,
    StaffRequestControllerRejectMutationRequest
  >({ method: 'PUT', url: `/staff-requests/${id}/reject`, data, ...requestConfig })
  return res
}

/**
 * @description Reject a pending staff request
 * @summary Reject staff request
 * {@link /staff-requests/:id/reject}
 */
export function useStaffRequestControllerReject<TContext>(
  options: {
    mutation?: UseMutationOptions<
      ResponseConfig<StaffRequestControllerRejectMutationResponse>,
      ResponseErrorConfig<
        StaffRequestControllerReject400 | StaffRequestControllerReject401 | StaffRequestControllerReject403 | StaffRequestControllerReject404
      >,
      { id: StaffRequestControllerRejectPathParams['id']; data: StaffRequestControllerRejectMutationRequest },
      TContext
    > & { client?: QueryClient }
    client?: Partial<RequestConfig<StaffRequestControllerRejectMutationRequest>> & { client?: typeof client }
  } = {},
) {
  const { mutation: { client: queryClient, ...mutationOptions } = {}, client: config = {} } = options ?? {}
  const mutationKey = mutationOptions?.mutationKey ?? staffRequestControllerRejectMutationKey()

  return useMutation<
    ResponseConfig<StaffRequestControllerRejectMutationResponse>,
    ResponseErrorConfig<StaffRequestControllerReject400 | StaffRequestControllerReject401 | StaffRequestControllerReject403 | StaffRequestControllerReject404>,
    { id: StaffRequestControllerRejectPathParams['id']; data: StaffRequestControllerRejectMutationRequest },
    TContext
  >(
    {
      mutationFn: async ({ id, data }) => {
        return staffRequestControllerReject(id, data, config)
      },
      mutationKey,
      ...mutationOptions,
    },
    queryClient,
  )
}