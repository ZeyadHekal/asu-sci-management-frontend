/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */

import client from '../../../global/api/apiClient'
import type { RequestConfig, ResponseErrorConfig, ResponseConfig } from '../../../global/api/apiClient'
import type { QueryKey, QueryClient, QueryObserverOptions, UseQueryResult } from '@tanstack/react-query'
import type {
  MaterialControllerDownloadMaterialQueryResponse,
  MaterialControllerDownloadMaterialPathParams,
  MaterialControllerDownloadMaterial401,
  MaterialControllerDownloadMaterial403,
  MaterialControllerDownloadMaterial404,
} from '../../types/materialsController/MaterialControllerDownloadMaterial.ts'
import { queryOptions, useQuery } from '@tanstack/react-query'

export const materialControllerDownloadMaterialQueryKey = (materialId: MaterialControllerDownloadMaterialPathParams['materialId']) =>
  [{ url: '/materials/:materialId/download', params: { materialId: materialId } }] as const

export type MaterialControllerDownloadMaterialQueryKey = ReturnType<typeof materialControllerDownloadMaterialQueryKey>

/**
 * @description Download a specific material file
 * @summary Download material
 * {@link /materials/:materialId/download}
 */
export async function materialControllerDownloadMaterial(
  materialId: MaterialControllerDownloadMaterialPathParams['materialId'],
  config: Partial<RequestConfig> & { client?: typeof client } = {},
) {
  const { client: request = client, ...requestConfig } = config

  const res = await request<
    MaterialControllerDownloadMaterialQueryResponse,
    ResponseErrorConfig<MaterialControllerDownloadMaterial401 | MaterialControllerDownloadMaterial403 | MaterialControllerDownloadMaterial404>,
    unknown
  >({ method: 'GET', url: `/materials/${materialId}/download`, ...requestConfig })
  return res
}

export function materialControllerDownloadMaterialQueryOptions(
  materialId: MaterialControllerDownloadMaterialPathParams['materialId'],
  config: Partial<RequestConfig> & { client?: typeof client } = {},
) {
  const queryKey = materialControllerDownloadMaterialQueryKey(materialId)
  return queryOptions<
    ResponseConfig<MaterialControllerDownloadMaterialQueryResponse>,
    ResponseErrorConfig<MaterialControllerDownloadMaterial401 | MaterialControllerDownloadMaterial403 | MaterialControllerDownloadMaterial404>,
    ResponseConfig<MaterialControllerDownloadMaterialQueryResponse>,
    typeof queryKey
  >({
    enabled: !!materialId,
    queryKey,
    queryFn: async ({ signal }) => {
      config.signal = signal
      return materialControllerDownloadMaterial(materialId, config)
    },
  })
}

/**
 * @description Download a specific material file
 * @summary Download material
 * {@link /materials/:materialId/download}
 */
export function useMaterialControllerDownloadMaterial<
  TData = ResponseConfig<MaterialControllerDownloadMaterialQueryResponse>,
  TQueryData = ResponseConfig<MaterialControllerDownloadMaterialQueryResponse>,
  TQueryKey extends QueryKey = MaterialControllerDownloadMaterialQueryKey,
>(
  materialId: MaterialControllerDownloadMaterialPathParams['materialId'],
  options: {
    query?: Partial<
      QueryObserverOptions<
        ResponseConfig<MaterialControllerDownloadMaterialQueryResponse>,
        ResponseErrorConfig<MaterialControllerDownloadMaterial401 | MaterialControllerDownloadMaterial403 | MaterialControllerDownloadMaterial404>,
        TData,
        TQueryData,
        TQueryKey
      >
    > & { client?: QueryClient }
    client?: Partial<RequestConfig> & { client?: typeof client }
  } = {},
) {
  const { query: { client: queryClient, ...queryOptions } = {}, client: config = {} } = options ?? {}
  const queryKey = queryOptions?.queryKey ?? materialControllerDownloadMaterialQueryKey(materialId)

  const query = useQuery(
    {
      ...(materialControllerDownloadMaterialQueryOptions(materialId, config) as unknown as QueryObserverOptions),
      queryKey,
      ...(queryOptions as unknown as Omit<QueryObserverOptions, 'queryKey'>),
    },
    queryClient,
  ) as UseQueryResult<
    TData,
    ResponseErrorConfig<MaterialControllerDownloadMaterial401 | MaterialControllerDownloadMaterial403 | MaterialControllerDownloadMaterial404>
  > & { queryKey: TQueryKey }

  query.queryKey = queryKey as TQueryKey

  return query
}