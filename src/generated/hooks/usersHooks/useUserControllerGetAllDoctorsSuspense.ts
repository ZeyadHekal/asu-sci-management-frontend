/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */

import client from '../../../global/api/apiClient'
import type { RequestConfig, ResponseErrorConfig, ResponseConfig } from '../../../global/api/apiClient'
import type { QueryKey, QueryClient, UseSuspenseQueryOptions, UseSuspenseQueryResult } from '@tanstack/react-query'
import type {
  UserControllerGetAllDoctorsQueryResponse,
  UserControllerGetAllDoctors401,
  UserControllerGetAllDoctors403,
} from '../../types/usersController/UserControllerGetAllDoctors.ts'
import { queryOptions, useSuspenseQuery } from '@tanstack/react-query'

export const userControllerGetAllDoctorsSuspenseQueryKey = () => [{ url: '/users/doctors' }] as const

export type UserControllerGetAllDoctorsSuspenseQueryKey = ReturnType<typeof userControllerGetAllDoctorsSuspenseQueryKey>

/**
 * @description Retrieve all users with TEACH_COURSE privilege
 * @summary Get all doctors
 * {@link /users/doctors}
 */
export async function userControllerGetAllDoctorsSuspense(config: Partial<RequestConfig> & { client?: typeof client } = {}) {
  const { client: request = client, ...requestConfig } = config

  const res = await request<
    UserControllerGetAllDoctorsQueryResponse,
    ResponseErrorConfig<UserControllerGetAllDoctors401 | UserControllerGetAllDoctors403>,
    unknown
  >({ method: 'GET', url: `/users/doctors`, ...requestConfig })
  return res
}

export function userControllerGetAllDoctorsSuspenseQueryOptions(config: Partial<RequestConfig> & { client?: typeof client } = {}) {
  const queryKey = userControllerGetAllDoctorsSuspenseQueryKey()
  return queryOptions<
    ResponseConfig<UserControllerGetAllDoctorsQueryResponse>,
    ResponseErrorConfig<UserControllerGetAllDoctors401 | UserControllerGetAllDoctors403>,
    ResponseConfig<UserControllerGetAllDoctorsQueryResponse>,
    typeof queryKey
  >({
    queryKey,
    queryFn: async ({ signal }) => {
      config.signal = signal
      return userControllerGetAllDoctorsSuspense(config)
    },
  })
}

/**
 * @description Retrieve all users with TEACH_COURSE privilege
 * @summary Get all doctors
 * {@link /users/doctors}
 */
export function useUserControllerGetAllDoctorsSuspense<
  TData = ResponseConfig<UserControllerGetAllDoctorsQueryResponse>,
  TQueryKey extends QueryKey = UserControllerGetAllDoctorsSuspenseQueryKey,
>(
  options: {
    query?: Partial<
      UseSuspenseQueryOptions<
        ResponseConfig<UserControllerGetAllDoctorsQueryResponse>,
        ResponseErrorConfig<UserControllerGetAllDoctors401 | UserControllerGetAllDoctors403>,
        TData,
        TQueryKey
      >
    > & { client?: QueryClient }
    client?: Partial<RequestConfig> & { client?: typeof client }
  } = {},
) {
  const { query: { client: queryClient, ...queryOptions } = {}, client: config = {} } = options ?? {}
  const queryKey = queryOptions?.queryKey ?? userControllerGetAllDoctorsSuspenseQueryKey()

  const query = useSuspenseQuery(
    {
      ...(userControllerGetAllDoctorsSuspenseQueryOptions(config) as unknown as UseSuspenseQueryOptions),
      queryKey,
      ...(queryOptions as unknown as Omit<UseSuspenseQueryOptions, 'queryKey'>),
    },
    queryClient,
  ) as UseSuspenseQueryResult<TData, ResponseErrorConfig<UserControllerGetAllDoctors401 | UserControllerGetAllDoctors403>> & { queryKey: TQueryKey }

  query.queryKey = queryKey as TQueryKey

  return query
}