/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */

import client from '../../../global/api/apiClient'
import type { RequestConfig, ResponseErrorConfig, ResponseConfig } from '../../../global/api/apiClient'
import type { QueryKey, QueryClient, QueryObserverOptions, UseQueryResult } from '@tanstack/react-query'
import type {
  UserControllerGetAllAssistantsQueryResponse,
  UserControllerGetAllAssistants401,
  UserControllerGetAllAssistants403,
} from '../../types/usersController/UserControllerGetAllAssistants.ts'
import { queryOptions, useQuery } from '@tanstack/react-query'

export const userControllerGetAllAssistantsQueryKey = () => [{ url: '/users/assistants' }] as const

export type UserControllerGetAllAssistantsQueryKey = ReturnType<typeof userControllerGetAllAssistantsQueryKey>

/**
 * @description Retrieve all users with LAB_ASSISTANT privilege
 * @summary Get all lab assistants
 * {@link /users/assistants}
 */
export async function userControllerGetAllAssistants(config: Partial<RequestConfig> & { client?: typeof client } = {}) {
  const { client: request = client, ...requestConfig } = config

  const res = await request<
    UserControllerGetAllAssistantsQueryResponse,
    ResponseErrorConfig<UserControllerGetAllAssistants401 | UserControllerGetAllAssistants403>,
    unknown
  >({ method: 'GET', url: `/users/assistants`, ...requestConfig })
  return res
}

export function userControllerGetAllAssistantsQueryOptions(config: Partial<RequestConfig> & { client?: typeof client } = {}) {
  const queryKey = userControllerGetAllAssistantsQueryKey()
  return queryOptions<
    ResponseConfig<UserControllerGetAllAssistantsQueryResponse>,
    ResponseErrorConfig<UserControllerGetAllAssistants401 | UserControllerGetAllAssistants403>,
    ResponseConfig<UserControllerGetAllAssistantsQueryResponse>,
    typeof queryKey
  >({
    queryKey,
    queryFn: async ({ signal }) => {
      config.signal = signal
      return userControllerGetAllAssistants(config)
    },
  })
}

/**
 * @description Retrieve all users with LAB_ASSISTANT privilege
 * @summary Get all lab assistants
 * {@link /users/assistants}
 */
export function useUserControllerGetAllAssistants<
  TData = ResponseConfig<UserControllerGetAllAssistantsQueryResponse>,
  TQueryData = ResponseConfig<UserControllerGetAllAssistantsQueryResponse>,
  TQueryKey extends QueryKey = UserControllerGetAllAssistantsQueryKey,
>(
  options: {
    query?: Partial<
      QueryObserverOptions<
        ResponseConfig<UserControllerGetAllAssistantsQueryResponse>,
        ResponseErrorConfig<UserControllerGetAllAssistants401 | UserControllerGetAllAssistants403>,
        TData,
        TQueryData,
        TQueryKey
      >
    > & { client?: QueryClient }
    client?: Partial<RequestConfig> & { client?: typeof client }
  } = {},
) {
  const { query: { client: queryClient, ...queryOptions } = {}, client: config = {} } = options ?? {}
  const queryKey = queryOptions?.queryKey ?? userControllerGetAllAssistantsQueryKey()

  const query = useQuery(
    {
      ...(userControllerGetAllAssistantsQueryOptions(config) as unknown as QueryObserverOptions),
      queryKey,
      ...(queryOptions as unknown as Omit<QueryObserverOptions, 'queryKey'>),
    },
    queryClient,
  ) as UseQueryResult<TData, ResponseErrorConfig<UserControllerGetAllAssistants401 | UserControllerGetAllAssistants403>> & { queryKey: TQueryKey }

  query.queryKey = queryKey as TQueryKey

  return query
}