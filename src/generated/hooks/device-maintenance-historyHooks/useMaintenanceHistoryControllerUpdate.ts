/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */

import client from '../../../global/api/apiClient'
import type { RequestConfig, ResponseConfig, ResponseErrorConfig } from '../../../global/api/apiClient'
import type { UseMutationOptions, QueryClient } from '@tanstack/react-query'
import type {
  MaintenanceHistoryControllerUpdateMutationRequest,
  MaintenanceHistoryControllerUpdateMutationResponse,
  MaintenanceHistoryControllerUpdatePathParams,
  MaintenanceHistoryControllerUpdate400,
  MaintenanceHistoryControllerUpdate401,
  MaintenanceHistoryControllerUpdate403,
  MaintenanceHistoryControllerUpdate404,
} from '../../types/device-maintenance-historyController/MaintenanceHistoryControllerUpdate.ts'
import { useMutation } from '@tanstack/react-query'

export const maintenanceHistoryControllerUpdateMutationKey = () => [{ url: '/device-maintenance-history/{maintenance_history_id}' }] as const

export type MaintenanceHistoryControllerUpdateMutationKey = ReturnType<typeof maintenanceHistoryControllerUpdateMutationKey>

/**
 * @description Update a maintenance history record
 * @summary Update maintenance history
 * {@link /device-maintenance-history/:maintenance_history_id}
 */
export async function maintenanceHistoryControllerUpdate(
  maintenance_history_id: MaintenanceHistoryControllerUpdatePathParams['maintenance_history_id'],
  data?: MaintenanceHistoryControllerUpdateMutationRequest,
  config: Partial<RequestConfig<MaintenanceHistoryControllerUpdateMutationRequest>> & { client?: typeof client } = {},
) {
  const { client: request = client, ...requestConfig } = config

  const res = await request<
    MaintenanceHistoryControllerUpdateMutationResponse,
    ResponseErrorConfig<
      | MaintenanceHistoryControllerUpdate400
      | MaintenanceHistoryControllerUpdate401
      | MaintenanceHistoryControllerUpdate403
      | MaintenanceHistoryControllerUpdate404
    >,
    MaintenanceHistoryControllerUpdateMutationRequest
  >({ method: 'PATCH', url: `/device-maintenance-history/${maintenance_history_id}`, data, ...requestConfig })
  return res
}

/**
 * @description Update a maintenance history record
 * @summary Update maintenance history
 * {@link /device-maintenance-history/:maintenance_history_id}
 */
export function useMaintenanceHistoryControllerUpdate<TContext>(
  options: {
    mutation?: UseMutationOptions<
      ResponseConfig<MaintenanceHistoryControllerUpdateMutationResponse>,
      ResponseErrorConfig<
        | MaintenanceHistoryControllerUpdate400
        | MaintenanceHistoryControllerUpdate401
        | MaintenanceHistoryControllerUpdate403
        | MaintenanceHistoryControllerUpdate404
      >,
      {
        maintenance_history_id: MaintenanceHistoryControllerUpdatePathParams['maintenance_history_id']
        data?: MaintenanceHistoryControllerUpdateMutationRequest
      },
      TContext
    > & { client?: QueryClient }
    client?: Partial<RequestConfig<MaintenanceHistoryControllerUpdateMutationRequest>> & { client?: typeof client }
  } = {},
) {
  const { mutation: { client: queryClient, ...mutationOptions } = {}, client: config = {} } = options ?? {}
  const mutationKey = mutationOptions?.mutationKey ?? maintenanceHistoryControllerUpdateMutationKey()

  return useMutation<
    ResponseConfig<MaintenanceHistoryControllerUpdateMutationResponse>,
    ResponseErrorConfig<
      | MaintenanceHistoryControllerUpdate400
      | MaintenanceHistoryControllerUpdate401
      | MaintenanceHistoryControllerUpdate403
      | MaintenanceHistoryControllerUpdate404
    >,
    {
      maintenance_history_id: MaintenanceHistoryControllerUpdatePathParams['maintenance_history_id']
      data?: MaintenanceHistoryControllerUpdateMutationRequest
    },
    TContext
  >(
    {
      mutationFn: async ({ maintenance_history_id, data }) => {
        return maintenanceHistoryControllerUpdate(maintenance_history_id, data, config)
      },
      mutationKey,
      ...mutationOptions,
    },
    queryClient,
  )
}