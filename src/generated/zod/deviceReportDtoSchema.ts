/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */

import { z } from 'zod'

export const deviceReportDtoSchema = z.object({
  description: z.string().describe('Report description'),
  status: z.enum(['REPORTED', 'IN_PROGRESS', 'RESOLVED', 'CANCELLED']).default('REPORTED').describe('Report status'),
  fixMessage: z.string().describe('Fix message').optional(),
  deviceId: z.string().describe('Device ID'),
  appId: z.string().describe('Software/App ID'),
  reporterId: z.string().describe('Reporter ID').optional(),
  id: z.string().describe('Report ID'),
  created_at: z.string().datetime({ offset: true }).describe('Created at'),
  updated_at: z.string().datetime({ offset: true }).describe('Updated at'),
  deviceName: z.string().describe('Device name').optional(),
  softwareName: z.string().describe('Software name').optional(),
  reporterName: z.string().describe('Reporter name').optional(),
})

export type DeviceReportDtoSchema = z.infer<typeof deviceReportDtoSchema>