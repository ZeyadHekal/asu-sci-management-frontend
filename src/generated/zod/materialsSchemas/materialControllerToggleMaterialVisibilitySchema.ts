/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */

import { materialDtoSchema } from '../materialDtoSchema.ts'
import { z } from 'zod'

export const materialControllerToggleMaterialVisibilityPathParamsSchema = z.object({
  materialId: z.string().describe('Material ID'),
})

export type MaterialControllerToggleMaterialVisibilityPathParamsSchema = z.infer<typeof materialControllerToggleMaterialVisibilityPathParamsSchema>

/**
 * @description Material visibility toggled successfully
 */
export const materialControllerToggleMaterialVisibility200Schema = z.lazy(() => materialDtoSchema)

export type MaterialControllerToggleMaterialVisibility200Schema = z.infer<typeof materialControllerToggleMaterialVisibility200Schema>

/**
 * @description Unauthorized
 */
export const materialControllerToggleMaterialVisibility401Schema = z.unknown()

export type MaterialControllerToggleMaterialVisibility401Schema = z.infer<typeof materialControllerToggleMaterialVisibility401Schema>

/**
 * @description Forbidden - Insufficient privileges
 */
export const materialControllerToggleMaterialVisibility403Schema = z.unknown()

export type MaterialControllerToggleMaterialVisibility403Schema = z.infer<typeof materialControllerToggleMaterialVisibility403Schema>

/**
 * @description Material not found
 */
export const materialControllerToggleMaterialVisibility404Schema = z.unknown()

export type MaterialControllerToggleMaterialVisibility404Schema = z.infer<typeof materialControllerToggleMaterialVisibility404Schema>

export const materialControllerToggleMaterialVisibilityMutationResponseSchema = z.lazy(() => materialControllerToggleMaterialVisibility200Schema)

export type MaterialControllerToggleMaterialVisibilityMutationResponseSchema = z.infer<typeof materialControllerToggleMaterialVisibilityMutationResponseSchema>