/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */

import { z } from 'zod'

export const eventGroupControllerStartExamForGroupPathParamsSchema = z.object({
  groupId: z.string().describe('Event Group ID'),
})

export type EventGroupControllerStartExamForGroupPathParamsSchema = z.infer<typeof eventGroupControllerStartExamForGroupPathParamsSchema>

/**
 * @description Exam started successfully
 */
export const eventGroupControllerStartExamForGroup200Schema = z.object({
  success: z.boolean().optional(),
  message: z.string().optional(),
})

export type EventGroupControllerStartExamForGroup200Schema = z.infer<typeof eventGroupControllerStartExamForGroup200Schema>

export const eventGroupControllerStartExamForGroupMutationResponseSchema = z.lazy(() => eventGroupControllerStartExamForGroup200Schema)

export type EventGroupControllerStartExamForGroupMutationResponseSchema = z.infer<typeof eventGroupControllerStartExamForGroupMutationResponseSchema>