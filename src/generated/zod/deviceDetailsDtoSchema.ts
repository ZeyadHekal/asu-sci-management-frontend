/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */

import { deviceSoftwareDtoSchema } from './deviceSoftwareDtoSchema.ts'
import { deviceSpecificationDtoSchema } from './deviceSpecificationDtoSchema.ts'
import { z } from 'zod'

export const deviceDetailsDtoSchema = z.object({
  id: z.string(),
  name: z.string(),
  IPAddress: z.string(),
  hasIssue: z.boolean(),
  status: z.string(),
  created_at: z.string().datetime({ offset: true }),
  updated_at: z.string().datetime({ offset: true }),
  labId: z.string(),
  labName: z.string(),
  labLocation: z.string(),
  assisstantId: z.string(),
  assistantName: z.string(),
  assistantEmail: z.string(),
  specifications: z.array(z.lazy(() => deviceSpecificationDtoSchema)),
  installedSoftware: z.array(z.lazy(() => deviceSoftwareDtoSchema)),
  totalReports: z.number(),
  totalMaintenanceRecords: z.number(),
  totalLoginSessions: z.number(),
  lastLoginDate: z.string().datetime({ offset: true }),
  lastMaintenanceDate: z.string().datetime({ offset: true }),
  lastReportDate: z.string().datetime({ offset: true }),
})

export type DeviceDetailsDtoSchema = z.infer<typeof deviceDetailsDtoSchema>