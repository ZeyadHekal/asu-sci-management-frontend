/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */

import { eventDtoSchema } from '../eventDtoSchema.ts'
import { z } from 'zod'

export const eventControllerGetByIdPathParamsSchema = z.object({
  event_id: z.string().describe('Event ID'),
})

export type EventControllerGetByIdPathParamsSchema = z.infer<typeof eventControllerGetByIdPathParamsSchema>

/**
 * @description Event retrieved successfully
 */
export const eventControllerGetById200Schema = z.lazy(() => eventDtoSchema)

export type EventControllerGetById200Schema = z.infer<typeof eventControllerGetById200Schema>

/**
 * @description Unauthorized
 */
export const eventControllerGetById401Schema = z.unknown()

export type EventControllerGetById401Schema = z.infer<typeof eventControllerGetById401Schema>

/**
 * @description Forbidden - Insufficient privileges
 */
export const eventControllerGetById403Schema = z.unknown()

export type EventControllerGetById403Schema = z.infer<typeof eventControllerGetById403Schema>

/**
 * @description Not Found - Event does not exist
 */
export const eventControllerGetById404Schema = z.unknown()

export type EventControllerGetById404Schema = z.infer<typeof eventControllerGetById404Schema>

export const eventControllerGetByIdQueryResponseSchema = z.lazy(() => eventControllerGetById200Schema)

export type EventControllerGetByIdQueryResponseSchema = z.infer<typeof eventControllerGetByIdQueryResponseSchema>