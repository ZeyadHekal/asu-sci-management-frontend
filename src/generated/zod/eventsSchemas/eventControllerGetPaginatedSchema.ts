/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */

import { eventPagedDtoSchema } from '../eventPagedDtoSchema.ts'
import { z } from 'zod'

export const eventControllerGetPaginatedQueryParamsSchema = z
  .object({
    limit: z.number().default(10),
    page: z.number().default(0),
    sortBy: z.string().default('created_at'),
    sortOrder: z.enum(['asc', 'desc']).default('desc'),
    ids: z.array(z.string()).optional(),
  })
  .optional()

export type EventControllerGetPaginatedQueryParamsSchema = z.infer<typeof eventControllerGetPaginatedQueryParamsSchema>

/**
 * @description Paginated events retrieved successfully
 */
export const eventControllerGetPaginated200Schema = z.lazy(() => eventPagedDtoSchema)

export type EventControllerGetPaginated200Schema = z.infer<typeof eventControllerGetPaginated200Schema>

/**
 * @description Unauthorized
 */
export const eventControllerGetPaginated401Schema = z.unknown()

export type EventControllerGetPaginated401Schema = z.infer<typeof eventControllerGetPaginated401Schema>

/**
 * @description Forbidden - Insufficient privileges
 */
export const eventControllerGetPaginated403Schema = z.unknown()

export type EventControllerGetPaginated403Schema = z.infer<typeof eventControllerGetPaginated403Schema>

export const eventControllerGetPaginatedQueryResponseSchema = z.lazy(() => eventControllerGetPaginated200Schema)

export type EventControllerGetPaginatedQueryResponseSchema = z.infer<typeof eventControllerGetPaginatedQueryResponseSchema>