/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */

import { eventListDtoSchema } from '../eventListDtoSchema.ts'
import { z } from 'zod'

export const eventControllerGetCourseEventsPathParamsSchema = z.object({
  courseId: z.string().describe('Course ID'),
})

export type EventControllerGetCourseEventsPathParamsSchema = z.infer<typeof eventControllerGetCourseEventsPathParamsSchema>

/**
 * @description Course events retrieved successfully
 */
export const eventControllerGetCourseEvents200Schema = z.array(z.lazy(() => eventListDtoSchema))

export type EventControllerGetCourseEvents200Schema = z.infer<typeof eventControllerGetCourseEvents200Schema>

/**
 * @description Unauthorized
 */
export const eventControllerGetCourseEvents401Schema = z.unknown()

export type EventControllerGetCourseEvents401Schema = z.infer<typeof eventControllerGetCourseEvents401Schema>

/**
 * @description Forbidden - Insufficient privileges
 */
export const eventControllerGetCourseEvents403Schema = z.unknown()

export type EventControllerGetCourseEvents403Schema = z.infer<typeof eventControllerGetCourseEvents403Schema>

/**
 * @description Not Found - Course does not exist
 */
export const eventControllerGetCourseEvents404Schema = z.unknown()

export type EventControllerGetCourseEvents404Schema = z.infer<typeof eventControllerGetCourseEvents404Schema>

export const eventControllerGetCourseEventsQueryResponseSchema = z.lazy(() => eventControllerGetCourseEvents200Schema)

export type EventControllerGetCourseEventsQueryResponseSchema = z.infer<typeof eventControllerGetCourseEventsQueryResponseSchema>