/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */

import { eventDtoSchema } from '../eventDtoSchema.ts'
import { updateEventDtoSchema } from '../updateEventDtoSchema.ts'
import { z } from 'zod'

export const eventControllerUpdatePathParamsSchema = z.object({
  event_id: z.string().describe('Event ID'),
})

export type EventControllerUpdatePathParamsSchema = z.infer<typeof eventControllerUpdatePathParamsSchema>

/**
 * @description Event updated successfully
 */
export const eventControllerUpdate200Schema = z.lazy(() => eventDtoSchema)

export type EventControllerUpdate200Schema = z.infer<typeof eventControllerUpdate200Schema>

/**
 * @description Bad Request - Invalid data
 */
export const eventControllerUpdate400Schema = z.unknown()

export type EventControllerUpdate400Schema = z.infer<typeof eventControllerUpdate400Schema>

/**
 * @description Unauthorized
 */
export const eventControllerUpdate401Schema = z.unknown()

export type EventControllerUpdate401Schema = z.infer<typeof eventControllerUpdate401Schema>

/**
 * @description Forbidden - Insufficient privileges
 */
export const eventControllerUpdate403Schema = z.unknown()

export type EventControllerUpdate403Schema = z.infer<typeof eventControllerUpdate403Schema>

/**
 * @description Not Found - Event does not exist
 */
export const eventControllerUpdate404Schema = z.unknown()

export type EventControllerUpdate404Schema = z.infer<typeof eventControllerUpdate404Schema>

export const eventControllerUpdateMutationRequestSchema = z.lazy(() => updateEventDtoSchema)

export type EventControllerUpdateMutationRequestSchema = z.infer<typeof eventControllerUpdateMutationRequestSchema>

export const eventControllerUpdateMutationResponseSchema = z.lazy(() => eventControllerUpdate200Schema)

export type EventControllerUpdateMutationResponseSchema = z.infer<typeof eventControllerUpdateMutationResponseSchema>