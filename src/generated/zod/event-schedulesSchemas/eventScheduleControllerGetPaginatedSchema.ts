/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */

import { eventSchedulePagedDtoSchema } from '../eventSchedulePagedDtoSchema.ts'
import { z } from 'zod'

export const eventScheduleControllerGetPaginatedQueryParamsSchema = z
  .object({
    limit: z.number().default(10),
    page: z.number().default(0),
    sortBy: z.string().default('created_at'),
    sortOrder: z.enum(['asc', 'desc']).default('desc'),
    ids: z.array(z.string()).optional(),
  })
  .optional()

export type EventScheduleControllerGetPaginatedQueryParamsSchema = z.infer<typeof eventScheduleControllerGetPaginatedQueryParamsSchema>

/**
 * @description Paginated event schedules retrieved successfully
 */
export const eventScheduleControllerGetPaginated200Schema = z.lazy(() => eventSchedulePagedDtoSchema)

export type EventScheduleControllerGetPaginated200Schema = z.infer<typeof eventScheduleControllerGetPaginated200Schema>

/**
 * @description Unauthorized
 */
export const eventScheduleControllerGetPaginated401Schema = z.unknown()

export type EventScheduleControllerGetPaginated401Schema = z.infer<typeof eventScheduleControllerGetPaginated401Schema>

/**
 * @description Forbidden - Insufficient privileges
 */
export const eventScheduleControllerGetPaginated403Schema = z.unknown()

export type EventScheduleControllerGetPaginated403Schema = z.infer<typeof eventScheduleControllerGetPaginated403Schema>

export const eventScheduleControllerGetPaginatedQueryResponseSchema = z.lazy(() => eventScheduleControllerGetPaginated200Schema)

export type EventScheduleControllerGetPaginatedQueryResponseSchema = z.infer<typeof eventScheduleControllerGetPaginatedQueryResponseSchema>