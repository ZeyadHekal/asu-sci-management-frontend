/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */

import { sessionDeviceStatusDtoSchema } from './sessionDeviceStatusDtoSchema.ts'
import { sessionStudentDtoSchema } from './sessionStudentDtoSchema.ts'
import { z } from 'zod'

export const activeSessionDetailsDtoSchema = z.object({
  sessionId: z.string().describe('Session ID'),
  course: z.object({}).describe('Course information'),
  group: z.object({}).describe('Group information'),
  lab: z.object({}).describe('Lab information'),
  startTime: z.string().datetime({ offset: true }).describe('Session start time'),
  expectedDuration: z.number().describe('Expected duration in minutes'),
  devices: z.array(z.lazy(() => sessionDeviceStatusDtoSchema)).describe('Device status list'),
  students: z.array(z.lazy(() => sessionStudentDtoSchema)).describe('Student list'),
})

export type ActiveSessionDetailsDtoSchema = z.infer<typeof activeSessionDetailsDtoSchema>