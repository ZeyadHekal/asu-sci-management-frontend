/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */

import { z } from 'zod'

export const privilegeControllerUnassignPrivilegeFromUserByIdPathParamsSchema = z.object({
  userId: z.string().describe('User ID'),
  privilegeCode: z
    .enum([
      'MANAGE_SYSTEM',
      'MANAGE_USERS',
      'MANAGE_STUDENTS',
      'MANAGE_LABS',
      'LAB_ASSISTANT',
      'STUDY_COURSE',
      'TEACH_COURSE',
      'ASSIST_IN_COURSE',
      'LAB_MAINTENANCE',
      'REPORT_DEVICE',
      'MANAGE_COURSES',
    ])
    .describe('Privilege code to unassign'),
})

export type PrivilegeControllerUnassignPrivilegeFromUserByIdPathParamsSchema = z.infer<typeof privilegeControllerUnassignPrivilegeFromUserByIdPathParamsSchema>

export const privilegeControllerUnassignPrivilegeFromUserById200Schema = z.unknown()

export type PrivilegeControllerUnassignPrivilegeFromUserById200Schema = z.infer<typeof privilegeControllerUnassignPrivilegeFromUserById200Schema>

export const privilegeControllerUnassignPrivilegeFromUserByIdMutationResponseSchema = z.lazy(() => privilegeControllerUnassignPrivilegeFromUserById200Schema)

export type PrivilegeControllerUnassignPrivilegeFromUserByIdMutationResponseSchema = z.infer<
  typeof privilegeControllerUnassignPrivilegeFromUserByIdMutationResponseSchema
>