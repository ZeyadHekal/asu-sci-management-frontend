/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */

import { z } from 'zod'

export const privilegeControllerUnassignPrivilegeFromUserTypeByIdPathParamsSchema = z.object({
  userTypeId: z.string(),
  privilegeCode: z.enum([
    'MANAGE_SYSTEM',
    'MANAGE_USERS',
    'MANAGE_STUDENTS',
    'MANAGE_LABS',
    'LAB_ASSISTANT',
    'STUDY_COURSE',
    'TEACH_COURSE',
    'ASSIST_IN_COURSE',
    'LAB_MAINTENANCE',
    'REPORT_DEVICE',
    'MANAGE_COURSES',
  ]),
})

export type PrivilegeControllerUnassignPrivilegeFromUserTypeByIdPathParamsSchema = z.infer<
  typeof privilegeControllerUnassignPrivilegeFromUserTypeByIdPathParamsSchema
>

export const privilegeControllerUnassignPrivilegeFromUserTypeById200Schema = z.unknown()

export type PrivilegeControllerUnassignPrivilegeFromUserTypeById200Schema = z.infer<typeof privilegeControllerUnassignPrivilegeFromUserTypeById200Schema>

export const privilegeControllerUnassignPrivilegeFromUserTypeByIdMutationResponseSchema = z.lazy(
  () => privilegeControllerUnassignPrivilegeFromUserTypeById200Schema,
)

export type PrivilegeControllerUnassignPrivilegeFromUserTypeByIdMutationResponseSchema = z.infer<
  typeof privilegeControllerUnassignPrivilegeFromUserTypeByIdMutationResponseSchema
>