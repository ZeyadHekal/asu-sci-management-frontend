/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */

import { z } from 'zod'

export const fileResponseDtoSchema = z.object({
  id: z.number().describe('File ID'),
  filename: z.string().describe('File name'),
  originalname: z.string().describe('Original file name'),
  mimetype: z.string().describe('File MIME type'),
  size: z.number().describe('File size in bytes'),
  objectName: z.string().describe('File object name in storage'),
  prefix: z.string().describe('File prefix/folder in storage').optional(),
  bucket: z.string().describe('Storage bucket name'),
  category: z.string().describe('File category').optional(),
  description: z.string().describe('File description').optional(),
  isPublic: z.boolean().describe('Whether the file is publicly accessible'),
  createdAt: z.string().datetime({ offset: true }).describe('File creation date'),
  updatedAt: z.string().datetime({ offset: true }).describe('File last update date'),
  url: z.string().describe('Signed URL for accessing the file').optional(),
})

export type FileResponseDtoSchema = z.infer<typeof fileResponseDtoSchema>