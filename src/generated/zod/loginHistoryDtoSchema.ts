/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */

import { z } from 'zod'

export const loginHistoryDtoSchema = z.object({
  deviceId: z.string().describe('Device ID'),
  userId: z.string().describe('User ID'),
  ipAddress: z.string().describe('IP Address'),
  loginStatus: z.enum(['SUCCESS', 'FAILED', 'LOGOUT']).describe('Login status'),
  loginTime: z.string().datetime({ offset: true }).describe('Login time'),
  logoutTime: z.string().datetime({ offset: true }).describe('Logout time').optional(),
  sessionDuration: z.number().describe('Session duration in minutes').optional(),
  userAgent: z.string().describe('User agent').optional(),
  operatingSystem: z.string().describe('Operating system').optional(),
  browser: z.string().describe('Browser').optional(),
  failureReason: z.string().describe('Failure reason').optional(),
  id: z.string().describe('Login history ID'),
  created_at: z.string().datetime({ offset: true }).describe('Created at'),
  updated_at: z.string().datetime({ offset: true }).describe('Updated at'),
  deviceName: z.string().describe('Device name').optional(),
  userName: z.string().describe('User name').optional(),
})

export type LoginHistoryDtoSchema = z.infer<typeof loginHistoryDtoSchema>