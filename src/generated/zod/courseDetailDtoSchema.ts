/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */

import { z } from 'zod'

export const courseDetailDtoSchema = z.object({
  name: z.string(),
  creditHours: z.number(),
  subjectCode: z.string(),
  courseNumber: z.number(),
  hasLab: z.boolean(),
  labDuration: z.string(),
  attendanceMarks: z.number(),
  id: z.string(),
  created_at: z.string().datetime({ offset: true }),
  updated_at: z.string().datetime({ offset: true }),
  courseCode: z.string().describe('Course code (subjectCode + courseNumber)'),
  courseType: z.string().describe('Course type based on hasLab field'),
  assignedDoctors: z.array(z.string()).describe('List of assigned doctor names'),
  requiredSoftware: z.array(z.string()).describe('List of required software names'),
  numberOfStudents: z.number().describe('Total number of enrolled students'),
  hasDefaultGroup: z.boolean().describe('Indicates if course has default group created'),
})

export type CourseDetailDtoSchema = z.infer<typeof courseDetailDtoSchema>