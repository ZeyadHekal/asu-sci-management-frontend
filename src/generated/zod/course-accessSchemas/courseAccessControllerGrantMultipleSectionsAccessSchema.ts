/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */

import { courseAccessPermissionDtoSchema } from '../courseAccessPermissionDtoSchema.ts'
import { grantMultipleSectionsDtoSchema } from '../grantMultipleSectionsDtoSchema.ts'
import { z } from 'zod'

/**
 * @description Access permissions granted successfully
 */
export const courseAccessControllerGrantMultipleSectionsAccess201Schema = z.array(z.lazy(() => courseAccessPermissionDtoSchema))

export type CourseAccessControllerGrantMultipleSectionsAccess201Schema = z.infer<typeof courseAccessControllerGrantMultipleSectionsAccess201Schema>

/**
 * @description Bad Request - Invalid data or user does not have ASSIST_IN_COURSE privilege
 */
export const courseAccessControllerGrantMultipleSectionsAccess400Schema = z.unknown()

export type CourseAccessControllerGrantMultipleSectionsAccess400Schema = z.infer<typeof courseAccessControllerGrantMultipleSectionsAccess400Schema>

/**
 * @description Unauthorized
 */
export const courseAccessControllerGrantMultipleSectionsAccess401Schema = z.unknown()

export type CourseAccessControllerGrantMultipleSectionsAccess401Schema = z.infer<typeof courseAccessControllerGrantMultipleSectionsAccess401Schema>

/**
 * @description Forbidden - Insufficient privileges
 */
export const courseAccessControllerGrantMultipleSectionsAccess403Schema = z.unknown()

export type CourseAccessControllerGrantMultipleSectionsAccess403Schema = z.infer<typeof courseAccessControllerGrantMultipleSectionsAccess403Schema>

/**
 * @description Not Found - Course or user does not exist
 */
export const courseAccessControllerGrantMultipleSectionsAccess404Schema = z.unknown()

export type CourseAccessControllerGrantMultipleSectionsAccess404Schema = z.infer<typeof courseAccessControllerGrantMultipleSectionsAccess404Schema>

export const courseAccessControllerGrantMultipleSectionsAccessMutationRequestSchema = z.lazy(() => grantMultipleSectionsDtoSchema)

export type CourseAccessControllerGrantMultipleSectionsAccessMutationRequestSchema = z.infer<
  typeof courseAccessControllerGrantMultipleSectionsAccessMutationRequestSchema
>

export const courseAccessControllerGrantMultipleSectionsAccessMutationResponseSchema = z.lazy(() => courseAccessControllerGrantMultipleSectionsAccess201Schema)

export type CourseAccessControllerGrantMultipleSectionsAccessMutationResponseSchema = z.infer<
  typeof courseAccessControllerGrantMultipleSectionsAccessMutationResponseSchema
>