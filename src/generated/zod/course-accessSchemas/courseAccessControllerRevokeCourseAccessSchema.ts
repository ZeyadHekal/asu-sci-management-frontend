/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */

import { z } from 'zod'

export const courseAccessControllerRevokeCourseAccessPathParamsSchema = z.object({
  userId: z.string().describe('User ID'),
  courseId: z.string().describe('Course ID'),
  section: z.enum(['grades', 'events', 'content', 'groups']).describe('Course section'),
})

export type CourseAccessControllerRevokeCourseAccessPathParamsSchema = z.infer<typeof courseAccessControllerRevokeCourseAccessPathParamsSchema>

/**
 * @description Access permission revoked successfully
 */
export const courseAccessControllerRevokeCourseAccess204Schema = z.unknown()

export type CourseAccessControllerRevokeCourseAccess204Schema = z.infer<typeof courseAccessControllerRevokeCourseAccess204Schema>

/**
 * @description Unauthorized
 */
export const courseAccessControllerRevokeCourseAccess401Schema = z.unknown()

export type CourseAccessControllerRevokeCourseAccess401Schema = z.infer<typeof courseAccessControllerRevokeCourseAccess401Schema>

/**
 * @description Forbidden - Insufficient privileges
 */
export const courseAccessControllerRevokeCourseAccess403Schema = z.unknown()

export type CourseAccessControllerRevokeCourseAccess403Schema = z.infer<typeof courseAccessControllerRevokeCourseAccess403Schema>

/**
 * @description Not Found - Permission does not exist
 */
export const courseAccessControllerRevokeCourseAccess404Schema = z.unknown()

export type CourseAccessControllerRevokeCourseAccess404Schema = z.infer<typeof courseAccessControllerRevokeCourseAccess404Schema>

export const courseAccessControllerRevokeCourseAccessMutationResponseSchema = z.lazy(() => courseAccessControllerRevokeCourseAccess204Schema)

export type CourseAccessControllerRevokeCourseAccessMutationResponseSchema = z.infer<typeof courseAccessControllerRevokeCourseAccessMutationResponseSchema>