/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */

import { z } from 'zod'

export const courseAccessControllerCheckSectionAccessPathParamsSchema = z.object({
  courseId: z.string().describe('Course ID'),
  section: z.enum(['grades', 'events', 'content', 'groups']).describe('Course section'),
})

export type CourseAccessControllerCheckSectionAccessPathParamsSchema = z.infer<typeof courseAccessControllerCheckSectionAccessPathParamsSchema>

export const courseAccessControllerCheckSectionAccessQueryParamsSchema = z
  .object({
    action: z.enum(['view', 'edit', 'delete']).describe('Action to check (default: view)').optional(),
  })
  .optional()

export type CourseAccessControllerCheckSectionAccessQueryParamsSchema = z.infer<typeof courseAccessControllerCheckSectionAccessQueryParamsSchema>

/**
 * @description Access check result
 */
export const courseAccessControllerCheckSectionAccess200Schema = z.boolean()

export type CourseAccessControllerCheckSectionAccess200Schema = z.infer<typeof courseAccessControllerCheckSectionAccess200Schema>

/**
 * @description Unauthorized
 */
export const courseAccessControllerCheckSectionAccess401Schema = z.unknown()

export type CourseAccessControllerCheckSectionAccess401Schema = z.infer<typeof courseAccessControllerCheckSectionAccess401Schema>

export const courseAccessControllerCheckSectionAccessQueryResponseSchema = z.lazy(() => courseAccessControllerCheckSectionAccess200Schema)

export type CourseAccessControllerCheckSectionAccessQueryResponseSchema = z.infer<typeof courseAccessControllerCheckSectionAccessQueryResponseSchema>