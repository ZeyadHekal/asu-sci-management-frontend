/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */

import { labDtoSchema } from '../labDtoSchema.ts'
import { updateLabDtoSchema } from '../updateLabDtoSchema.ts'
import { z } from 'zod'

export const labControllerUpdatePathParamsSchema = z.object({
  lab_id: z.string().describe('Lab ID'),
})

export type LabControllerUpdatePathParamsSchema = z.infer<typeof labControllerUpdatePathParamsSchema>

/**
 * @description Lab updated successfully
 */
export const labControllerUpdate200Schema = z.lazy(() => labDtoSchema)

export type LabControllerUpdate200Schema = z.infer<typeof labControllerUpdate200Schema>

/**
 * @description Bad Request - Invalid data
 */
export const labControllerUpdate400Schema = z.unknown()

export type LabControllerUpdate400Schema = z.infer<typeof labControllerUpdate400Schema>

/**
 * @description Unauthorized
 */
export const labControllerUpdate401Schema = z.unknown()

export type LabControllerUpdate401Schema = z.infer<typeof labControllerUpdate401Schema>

/**
 * @description Forbidden - Insufficient privileges
 */
export const labControllerUpdate403Schema = z.unknown()

export type LabControllerUpdate403Schema = z.infer<typeof labControllerUpdate403Schema>

/**
 * @description Not Found - Lab does not exist
 */
export const labControllerUpdate404Schema = z.unknown()

export type LabControllerUpdate404Schema = z.infer<typeof labControllerUpdate404Schema>

export const labControllerUpdateMutationRequestSchema = z.lazy(() => updateLabDtoSchema)

export type LabControllerUpdateMutationRequestSchema = z.infer<typeof labControllerUpdateMutationRequestSchema>

export const labControllerUpdateMutationResponseSchema = z.lazy(() => labControllerUpdate200Schema)

export type LabControllerUpdateMutationResponseSchema = z.infer<typeof labControllerUpdateMutationResponseSchema>