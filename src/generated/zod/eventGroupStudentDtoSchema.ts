/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */

import { z } from 'zod'

export const eventGroupStudentDtoSchema = z.object({
  studentId: z.string().describe('Student ID'),
  studentName: z.string().describe('Student name'),
  username: z.string().describe('Student username'),
  seatNo: z.string().describe('Seat number').optional(),
  hasAttended: z.boolean().describe('Whether student has attended').optional(),
  isInExamMode: z.boolean().describe('Whether student is in exam mode'),
  examModeEnteredAt: z.string().datetime({ offset: true }).describe('When student entered exam mode').optional(),
  examStartedAt: z.string().datetime({ offset: true }).describe('When exam started for student').optional(),
  mark: z.number().describe('Student mark').optional(),
  submittedAt: z.string().datetime({ offset: true }).describe('When student submitted').optional(),
  assignedExamModelUrl: z.string().describe('Assigned exam model URL').optional(),
})

export type EventGroupStudentDtoSchema = z.infer<typeof eventGroupStudentDtoSchema>