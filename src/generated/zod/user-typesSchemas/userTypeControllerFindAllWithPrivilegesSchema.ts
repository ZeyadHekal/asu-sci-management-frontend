/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */

import { userTypePagedDtoSchema } from '../userTypePagedDtoSchema.ts'
import { z } from 'zod'

export const userTypeControllerFindAllWithPrivilegesQueryParamsSchema = z.object({
  search: z.string(),
  page: z.number(),
  limit: z.number(),
})

export type UserTypeControllerFindAllWithPrivilegesQueryParamsSchema = z.infer<typeof userTypeControllerFindAllWithPrivilegesQueryParamsSchema>

/**
 * @description User types with privileges retrieved successfully
 */
export const userTypeControllerFindAllWithPrivileges200Schema = z.lazy(() => userTypePagedDtoSchema)

export type UserTypeControllerFindAllWithPrivileges200Schema = z.infer<typeof userTypeControllerFindAllWithPrivileges200Schema>

/**
 * @description Unauthorized
 */
export const userTypeControllerFindAllWithPrivileges401Schema = z.unknown()

export type UserTypeControllerFindAllWithPrivileges401Schema = z.infer<typeof userTypeControllerFindAllWithPrivileges401Schema>

/**
 * @description Forbidden - Insufficient privileges
 */
export const userTypeControllerFindAllWithPrivileges403Schema = z.unknown()

export type UserTypeControllerFindAllWithPrivileges403Schema = z.infer<typeof userTypeControllerFindAllWithPrivileges403Schema>

export const userTypeControllerFindAllWithPrivilegesQueryResponseSchema = z.lazy(() => userTypeControllerFindAllWithPrivileges200Schema)

export type UserTypeControllerFindAllWithPrivilegesQueryResponseSchema = z.infer<typeof userTypeControllerFindAllWithPrivilegesQueryResponseSchema>