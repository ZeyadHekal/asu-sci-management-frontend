/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */

import { userTypeDtoSchema } from '../userTypeDtoSchema.ts'
import { z } from 'zod'

export const userTypeControllerGetByIdPathParamsSchema = z.object({
  id: z.string().describe('User Type ID'),
})

export type UserTypeControllerGetByIdPathParamsSchema = z.infer<typeof userTypeControllerGetByIdPathParamsSchema>

/**
 * @description User type retrieved successfully
 */
export const userTypeControllerGetById200Schema = z.lazy(() => userTypeDtoSchema)

export type UserTypeControllerGetById200Schema = z.infer<typeof userTypeControllerGetById200Schema>

/**
 * @description Unauthorized
 */
export const userTypeControllerGetById401Schema = z.unknown()

export type UserTypeControllerGetById401Schema = z.infer<typeof userTypeControllerGetById401Schema>

/**
 * @description Forbidden - Insufficient privileges
 */
export const userTypeControllerGetById403Schema = z.unknown()

export type UserTypeControllerGetById403Schema = z.infer<typeof userTypeControllerGetById403Schema>

/**
 * @description Not Found - User type does not exist
 */
export const userTypeControllerGetById404Schema = z.unknown()

export type UserTypeControllerGetById404Schema = z.infer<typeof userTypeControllerGetById404Schema>

export const userTypeControllerGetByIdQueryResponseSchema = z.lazy(() => userTypeControllerGetById200Schema)

export type UserTypeControllerGetByIdQueryResponseSchema = z.infer<typeof userTypeControllerGetByIdQueryResponseSchema>