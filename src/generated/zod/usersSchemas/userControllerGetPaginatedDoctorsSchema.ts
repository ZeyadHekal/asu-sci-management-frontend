/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */

import { doctorPagedDtoSchema } from '../doctorPagedDtoSchema.ts'
import { z } from 'zod'

export const userControllerGetPaginatedDoctorsQueryParamsSchema = z
  .object({
    limit: z.number().default(10),
    page: z.number().default(0),
    sortBy: z.string().default('created_at'),
    sortOrder: z.enum(['asc', 'desc']).default('desc'),
    ids: z.array(z.string()).optional(),
  })
  .optional()

export type UserControllerGetPaginatedDoctorsQueryParamsSchema = z.infer<typeof userControllerGetPaginatedDoctorsQueryParamsSchema>

/**
 * @description Paginated doctors retrieved successfully
 */
export const userControllerGetPaginatedDoctors200Schema = z.lazy(() => doctorPagedDtoSchema)

export type UserControllerGetPaginatedDoctors200Schema = z.infer<typeof userControllerGetPaginatedDoctors200Schema>

/**
 * @description Unauthorized
 */
export const userControllerGetPaginatedDoctors401Schema = z.unknown()

export type UserControllerGetPaginatedDoctors401Schema = z.infer<typeof userControllerGetPaginatedDoctors401Schema>

/**
 * @description Forbidden - Insufficient privileges
 */
export const userControllerGetPaginatedDoctors403Schema = z.unknown()

export type UserControllerGetPaginatedDoctors403Schema = z.infer<typeof userControllerGetPaginatedDoctors403Schema>

export const userControllerGetPaginatedDoctorsQueryResponseSchema = z.lazy(() => userControllerGetPaginatedDoctors200Schema)

export type UserControllerGetPaginatedDoctorsQueryResponseSchema = z.infer<typeof userControllerGetPaginatedDoctorsQueryResponseSchema>