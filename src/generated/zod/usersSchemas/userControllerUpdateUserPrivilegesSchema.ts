/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */

import { staffDtoSchema } from '../staffDtoSchema.ts'
import { updateUserPrivilegesDtoSchema } from '../updateUserPrivilegesDtoSchema.ts'
import { z } from 'zod'

export const userControllerUpdateUserPrivilegesPathParamsSchema = z.object({
  id: z.string().describe('User ID'),
})

export type UserControllerUpdateUserPrivilegesPathParamsSchema = z.infer<typeof userControllerUpdateUserPrivilegesPathParamsSchema>

/**
 * @description User privileges updated successfully
 */
export const userControllerUpdateUserPrivileges200Schema = z.lazy(() => staffDtoSchema)

export type UserControllerUpdateUserPrivileges200Schema = z.infer<typeof userControllerUpdateUserPrivileges200Schema>

/**
 * @description Bad Request - Invalid privilege codes
 */
export const userControllerUpdateUserPrivileges400Schema = z.unknown()

export type UserControllerUpdateUserPrivileges400Schema = z.infer<typeof userControllerUpdateUserPrivileges400Schema>

/**
 * @description Unauthorized
 */
export const userControllerUpdateUserPrivileges401Schema = z.unknown()

export type UserControllerUpdateUserPrivileges401Schema = z.infer<typeof userControllerUpdateUserPrivileges401Schema>

/**
 * @description Forbidden - Insufficient privileges
 */
export const userControllerUpdateUserPrivileges403Schema = z.unknown()

export type UserControllerUpdateUserPrivileges403Schema = z.infer<typeof userControllerUpdateUserPrivileges403Schema>

/**
 * @description Not Found - User does not exist
 */
export const userControllerUpdateUserPrivileges404Schema = z.unknown()

export type UserControllerUpdateUserPrivileges404Schema = z.infer<typeof userControllerUpdateUserPrivileges404Schema>

export const userControllerUpdateUserPrivilegesMutationRequestSchema = z.lazy(() => updateUserPrivilegesDtoSchema)

export type UserControllerUpdateUserPrivilegesMutationRequestSchema = z.infer<typeof userControllerUpdateUserPrivilegesMutationRequestSchema>

export const userControllerUpdateUserPrivilegesMutationResponseSchema = z.lazy(() => userControllerUpdateUserPrivileges200Schema)

export type UserControllerUpdateUserPrivilegesMutationResponseSchema = z.infer<typeof userControllerUpdateUserPrivilegesMutationResponseSchema>