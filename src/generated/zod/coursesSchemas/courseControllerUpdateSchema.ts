/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */

import { courseDetailDtoSchema } from '../courseDetailDtoSchema.ts'
import { updateCourseDtoSchema } from '../updateCourseDtoSchema.ts'
import { z } from 'zod'

export const courseControllerUpdatePathParamsSchema = z.object({
  course_id: z.string().describe('Course ID'),
})

export type CourseControllerUpdatePathParamsSchema = z.infer<typeof courseControllerUpdatePathParamsSchema>

/**
 * @description Course updated successfully
 */
export const courseControllerUpdate200Schema = z.lazy(() => courseDetailDtoSchema)

export type CourseControllerUpdate200Schema = z.infer<typeof courseControllerUpdate200Schema>

/**
 * @description Bad Request - Invalid data
 */
export const courseControllerUpdate400Schema = z.unknown()

export type CourseControllerUpdate400Schema = z.infer<typeof courseControllerUpdate400Schema>

/**
 * @description Unauthorized
 */
export const courseControllerUpdate401Schema = z.unknown()

export type CourseControllerUpdate401Schema = z.infer<typeof courseControllerUpdate401Schema>

/**
 * @description Forbidden - Insufficient privileges
 */
export const courseControllerUpdate403Schema = z.unknown()

export type CourseControllerUpdate403Schema = z.infer<typeof courseControllerUpdate403Schema>

/**
 * @description Not Found - Course does not exist
 */
export const courseControllerUpdate404Schema = z.unknown()

export type CourseControllerUpdate404Schema = z.infer<typeof courseControllerUpdate404Schema>

export const courseControllerUpdateMutationRequestSchema = z.lazy(() => updateCourseDtoSchema)

export type CourseControllerUpdateMutationRequestSchema = z.infer<typeof courseControllerUpdateMutationRequestSchema>

export const courseControllerUpdateMutationResponseSchema = z.lazy(() => courseControllerUpdate200Schema)

export type CourseControllerUpdateMutationResponseSchema = z.infer<typeof courseControllerUpdateMutationResponseSchema>