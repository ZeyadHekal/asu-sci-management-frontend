/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */

import { studentCoursePagedDtoSchema } from '../studentCoursePagedDtoSchema.ts'
import { z } from 'zod'

export const studentCourseControllerGetPaginatedQueryParamsSchema = z
  .object({
    limit: z.number().default(10),
    page: z.number().default(0),
    sortBy: z.string().default('created_at'),
    sortOrder: z.enum(['asc', 'desc']).default('desc'),
    ids: z.array(z.string()).optional(),
    courseId: z.string().optional(),
    studentId: z.string().optional(),
  })
  .optional()

export type StudentCourseControllerGetPaginatedQueryParamsSchema = z.infer<typeof studentCourseControllerGetPaginatedQueryParamsSchema>

/**
 * @description Return all enrollments.
 */
export const studentCourseControllerGetPaginated200Schema = z.lazy(() => studentCoursePagedDtoSchema)

export type StudentCourseControllerGetPaginated200Schema = z.infer<typeof studentCourseControllerGetPaginated200Schema>

export const studentCourseControllerGetPaginatedQueryResponseSchema = z.lazy(() => studentCourseControllerGetPaginated200Schema)

export type StudentCourseControllerGetPaginatedQueryResponseSchema = z.infer<typeof studentCourseControllerGetPaginatedQueryResponseSchema>