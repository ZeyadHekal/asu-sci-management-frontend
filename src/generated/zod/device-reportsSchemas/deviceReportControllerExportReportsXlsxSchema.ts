/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */

import { z } from 'zod'

export const deviceReportControllerExportReportsXlsxQueryParamsSchema = z
  .object({
    limit: z.number().default(10),
    page: z.number().default(0),
    sortBy: z.string().default('created_at'),
    sortOrder: z.enum(['asc', 'desc']).default('desc'),
    ids: z.array(z.string()).optional(),
    deviceId: z.string().describe('Filter by device ID').optional(),
    labId: z.string().describe('Filter by lab ID').optional(),
    reporterId: z.string().describe('Filter by reporter ID').optional(),
    status: z.enum(['PENDING_REVIEW', 'IN_PROGRESS', 'CONFIRMED', 'RESOLVED', 'REJECTED', 'CANCELLED']).describe('Filter by status').optional(),
    appId: z.string().describe('Filter by software ID').optional(),
    search: z.string().describe('Search across device names, descriptions, and reporter names').optional(),
    dateFrom: z.string().describe('Filter by date from (YYYY-MM-DD)').optional(),
    dateTo: z.string().describe('Filter by date to (YYYY-MM-DD)').optional(),
  })
  .optional()

export type DeviceReportControllerExportReportsXlsxQueryParamsSchema = z.infer<typeof deviceReportControllerExportReportsXlsxQueryParamsSchema>

/**
 * @description Excel export successful
 */
export const deviceReportControllerExportReportsXlsx200Schema = z.unknown()

export type DeviceReportControllerExportReportsXlsx200Schema = z.infer<typeof deviceReportControllerExportReportsXlsx200Schema>

/**
 * @description Unauthorized
 */
export const deviceReportControllerExportReportsXlsx401Schema = z.unknown()

export type DeviceReportControllerExportReportsXlsx401Schema = z.infer<typeof deviceReportControllerExportReportsXlsx401Schema>

/**
 * @description Forbidden - Insufficient privileges
 */
export const deviceReportControllerExportReportsXlsx403Schema = z.unknown()

export type DeviceReportControllerExportReportsXlsx403Schema = z.infer<typeof deviceReportControllerExportReportsXlsx403Schema>

export const deviceReportControllerExportReportsXlsxQueryResponseSchema = z.lazy(() => deviceReportControllerExportReportsXlsx200Schema)

export type DeviceReportControllerExportReportsXlsxQueryResponseSchema = z.infer<typeof deviceReportControllerExportReportsXlsxQueryResponseSchema>