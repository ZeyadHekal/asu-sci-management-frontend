/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */

import { deviceReportDtoSchema } from '../deviceReportDtoSchema.ts'
import { updateDeviceReportDtoSchema } from '../updateDeviceReportDtoSchema.ts'
import { z } from 'zod'

export const deviceReportControllerUpdatePathParamsSchema = z.object({
  device_report_id: z.string().describe('Device Report ID'),
})

export type DeviceReportControllerUpdatePathParamsSchema = z.infer<typeof deviceReportControllerUpdatePathParamsSchema>

/**
 * @description Device report updated successfully
 */
export const deviceReportControllerUpdate200Schema = z.lazy(() => deviceReportDtoSchema)

export type DeviceReportControllerUpdate200Schema = z.infer<typeof deviceReportControllerUpdate200Schema>

/**
 * @description Bad Request - Invalid data
 */
export const deviceReportControllerUpdate400Schema = z.unknown()

export type DeviceReportControllerUpdate400Schema = z.infer<typeof deviceReportControllerUpdate400Schema>

/**
 * @description Unauthorized
 */
export const deviceReportControllerUpdate401Schema = z.unknown()

export type DeviceReportControllerUpdate401Schema = z.infer<typeof deviceReportControllerUpdate401Schema>

/**
 * @description Forbidden - Insufficient privileges
 */
export const deviceReportControllerUpdate403Schema = z.unknown()

export type DeviceReportControllerUpdate403Schema = z.infer<typeof deviceReportControllerUpdate403Schema>

/**
 * @description Not Found - Device report does not exist
 */
export const deviceReportControllerUpdate404Schema = z.unknown()

export type DeviceReportControllerUpdate404Schema = z.infer<typeof deviceReportControllerUpdate404Schema>

export const deviceReportControllerUpdateMutationRequestSchema = z.lazy(() => updateDeviceReportDtoSchema)

export type DeviceReportControllerUpdateMutationRequestSchema = z.infer<typeof deviceReportControllerUpdateMutationRequestSchema>

export const deviceReportControllerUpdateMutationResponseSchema = z.lazy(() => deviceReportControllerUpdate200Schema)

export type DeviceReportControllerUpdateMutationResponseSchema = z.infer<typeof deviceReportControllerUpdateMutationResponseSchema>