/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */

import { z } from 'zod'

export const deviceReportControllerGetPaginatedQueryParamsSchema = z
  .object({
    limit: z.number().default(10),
    page: z.number().default(0),
    sortBy: z.string().default('created_at'),
    sortOrder: z.enum(['asc', 'desc']).default('desc'),
    ids: z.array(z.string()).optional(),
    deviceId: z.string().describe('Filter by device ID').optional(),
    reporterId: z.string().describe('Filter by reporter ID').optional(),
    status: z.enum(['REPORTED', 'IN_PROGRESS', 'RESOLVED', 'CANCELLED']).describe('Filter by status').optional(),
    appId: z.string().describe('Filter by software ID').optional(),
  })
  .optional()

export type DeviceReportControllerGetPaginatedQueryParamsSchema = z.infer<typeof deviceReportControllerGetPaginatedQueryParamsSchema>

/**
 * @description Paginated device reports retrieved successfully
 */
export const deviceReportControllerGetPaginated200Schema = z.unknown()

export type DeviceReportControllerGetPaginated200Schema = z.infer<typeof deviceReportControllerGetPaginated200Schema>

/**
 * @description Unauthorized
 */
export const deviceReportControllerGetPaginated401Schema = z.unknown()

export type DeviceReportControllerGetPaginated401Schema = z.infer<typeof deviceReportControllerGetPaginated401Schema>

/**
 * @description Forbidden - Insufficient privileges
 */
export const deviceReportControllerGetPaginated403Schema = z.unknown()

export type DeviceReportControllerGetPaginated403Schema = z.infer<typeof deviceReportControllerGetPaginated403Schema>

export const deviceReportControllerGetPaginatedQueryResponseSchema = z.lazy(() => deviceReportControllerGetPaginated200Schema)

export type DeviceReportControllerGetPaginatedQueryResponseSchema = z.infer<typeof deviceReportControllerGetPaginatedQueryResponseSchema>