/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */

import { softwareDtoSchema } from '../softwareDtoSchema.ts'
import { z } from 'zod'

export const softwareControllerGetByIdPathParamsSchema = z.object({
  software_id: z.string().describe('Software ID'),
})

export type SoftwareControllerGetByIdPathParamsSchema = z.infer<typeof softwareControllerGetByIdPathParamsSchema>

/**
 * @description Software retrieved successfully
 */
export const softwareControllerGetById200Schema = z.lazy(() => softwareDtoSchema)

export type SoftwareControllerGetById200Schema = z.infer<typeof softwareControllerGetById200Schema>

/**
 * @description Unauthorized
 */
export const softwareControllerGetById401Schema = z.unknown()

export type SoftwareControllerGetById401Schema = z.infer<typeof softwareControllerGetById401Schema>

/**
 * @description Forbidden - Insufficient privileges
 */
export const softwareControllerGetById403Schema = z.unknown()

export type SoftwareControllerGetById403Schema = z.infer<typeof softwareControllerGetById403Schema>

/**
 * @description Not Found - Software does not exist
 */
export const softwareControllerGetById404Schema = z.unknown()

export type SoftwareControllerGetById404Schema = z.infer<typeof softwareControllerGetById404Schema>

export const softwareControllerGetByIdQueryResponseSchema = z.lazy(() => softwareControllerGetById200Schema)

export type SoftwareControllerGetByIdQueryResponseSchema = z.infer<typeof softwareControllerGetByIdQueryResponseSchema>