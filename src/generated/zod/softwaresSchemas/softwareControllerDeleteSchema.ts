/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */

import { deleteDtoSchema } from '../deleteDtoSchema.ts'
import { z } from 'zod'

export const softwareControllerDeletePathParamsSchema = z.object({
  software_ids: z.string().describe('Comma-separated software IDs'),
})

export type SoftwareControllerDeletePathParamsSchema = z.infer<typeof softwareControllerDeletePathParamsSchema>

/**
 * @description Software deleted successfully
 */
export const softwareControllerDelete200Schema = z.lazy(() => deleteDtoSchema)

export type SoftwareControllerDelete200Schema = z.infer<typeof softwareControllerDelete200Schema>

/**
 * @description Unauthorized
 */
export const softwareControllerDelete401Schema = z.unknown()

export type SoftwareControllerDelete401Schema = z.infer<typeof softwareControllerDelete401Schema>

/**
 * @description Forbidden - Insufficient privileges
 */
export const softwareControllerDelete403Schema = z.unknown()

export type SoftwareControllerDelete403Schema = z.infer<typeof softwareControllerDelete403Schema>

/**
 * @description Not Found - One or more software do not exist
 */
export const softwareControllerDelete404Schema = z.unknown()

export type SoftwareControllerDelete404Schema = z.infer<typeof softwareControllerDelete404Schema>

export const softwareControllerDeleteMutationResponseSchema = z.lazy(() => softwareControllerDelete200Schema)

export type SoftwareControllerDeleteMutationResponseSchema = z.infer<typeof softwareControllerDeleteMutationResponseSchema>