/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */

import { softwarePagedDtoSchema } from '../softwarePagedDtoSchema.ts'
import { z } from 'zod'

export const softwareControllerGetPaginatedQueryParamsSchema = z
  .object({
    limit: z.number().default(10),
    page: z.number().default(0),
    sortBy: z.string().default('created_at'),
    sortOrder: z.enum(['asc', 'desc']).default('desc'),
    ids: z.array(z.string()).optional(),
  })
  .optional()

export type SoftwareControllerGetPaginatedQueryParamsSchema = z.infer<typeof softwareControllerGetPaginatedQueryParamsSchema>

/**
 * @description Paginated software list retrieved successfully
 */
export const softwareControllerGetPaginated200Schema = z.lazy(() => softwarePagedDtoSchema)

export type SoftwareControllerGetPaginated200Schema = z.infer<typeof softwareControllerGetPaginated200Schema>

/**
 * @description Unauthorized
 */
export const softwareControllerGetPaginated401Schema = z.unknown()

export type SoftwareControllerGetPaginated401Schema = z.infer<typeof softwareControllerGetPaginated401Schema>

/**
 * @description Forbidden - Insufficient privileges
 */
export const softwareControllerGetPaginated403Schema = z.unknown()

export type SoftwareControllerGetPaginated403Schema = z.infer<typeof softwareControllerGetPaginated403Schema>

export const softwareControllerGetPaginatedQueryResponseSchema = z.lazy(() => softwareControllerGetPaginated200Schema)

export type SoftwareControllerGetPaginatedQueryResponseSchema = z.infer<typeof softwareControllerGetPaginatedQueryResponseSchema>