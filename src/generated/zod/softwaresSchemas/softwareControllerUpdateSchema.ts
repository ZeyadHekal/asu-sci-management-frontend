/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */

import { softwareDtoSchema } from '../softwareDtoSchema.ts'
import { updateSoftwareDtoSchema } from '../updateSoftwareDtoSchema.ts'
import { z } from 'zod'

export const softwareControllerUpdatePathParamsSchema = z.object({
  software_id: z.string().describe('Software ID'),
})

export type SoftwareControllerUpdatePathParamsSchema = z.infer<typeof softwareControllerUpdatePathParamsSchema>

/**
 * @description Software updated successfully
 */
export const softwareControllerUpdate200Schema = z.lazy(() => softwareDtoSchema)

export type SoftwareControllerUpdate200Schema = z.infer<typeof softwareControllerUpdate200Schema>

/**
 * @description Bad Request - Invalid data
 */
export const softwareControllerUpdate400Schema = z.unknown()

export type SoftwareControllerUpdate400Schema = z.infer<typeof softwareControllerUpdate400Schema>

/**
 * @description Unauthorized
 */
export const softwareControllerUpdate401Schema = z.unknown()

export type SoftwareControllerUpdate401Schema = z.infer<typeof softwareControllerUpdate401Schema>

/**
 * @description Forbidden - Insufficient privileges
 */
export const softwareControllerUpdate403Schema = z.unknown()

export type SoftwareControllerUpdate403Schema = z.infer<typeof softwareControllerUpdate403Schema>

/**
 * @description Not Found - Software does not exist
 */
export const softwareControllerUpdate404Schema = z.unknown()

export type SoftwareControllerUpdate404Schema = z.infer<typeof softwareControllerUpdate404Schema>

export const softwareControllerUpdateMutationRequestSchema = z.lazy(() => updateSoftwareDtoSchema)

export type SoftwareControllerUpdateMutationRequestSchema = z.infer<typeof softwareControllerUpdateMutationRequestSchema>

export const softwareControllerUpdateMutationResponseSchema = z.lazy(() => softwareControllerUpdate200Schema)

export type SoftwareControllerUpdateMutationResponseSchema = z.infer<typeof softwareControllerUpdateMutationResponseSchema>