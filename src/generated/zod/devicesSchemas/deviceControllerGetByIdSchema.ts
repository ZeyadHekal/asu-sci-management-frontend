/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */

import { deviceDtoSchema } from '../deviceDtoSchema.ts'
import { z } from 'zod'

export const deviceControllerGetByIdPathParamsSchema = z.object({
  device_id: z.string().describe('Device ID'),
})

export type DeviceControllerGetByIdPathParamsSchema = z.infer<typeof deviceControllerGetByIdPathParamsSchema>

/**
 * @description Device retrieved successfully
 */
export const deviceControllerGetById200Schema = z.lazy(() => deviceDtoSchema)

export type DeviceControllerGetById200Schema = z.infer<typeof deviceControllerGetById200Schema>

/**
 * @description Unauthorized
 */
export const deviceControllerGetById401Schema = z.unknown()

export type DeviceControllerGetById401Schema = z.infer<typeof deviceControllerGetById401Schema>

/**
 * @description Forbidden - Insufficient privileges
 */
export const deviceControllerGetById403Schema = z.unknown()

export type DeviceControllerGetById403Schema = z.infer<typeof deviceControllerGetById403Schema>

/**
 * @description Not Found - Device does not exist
 */
export const deviceControllerGetById404Schema = z.unknown()

export type DeviceControllerGetById404Schema = z.infer<typeof deviceControllerGetById404Schema>

export const deviceControllerGetByIdQueryResponseSchema = z.lazy(() => deviceControllerGetById200Schema)

export type DeviceControllerGetByIdQueryResponseSchema = z.infer<typeof deviceControllerGetByIdQueryResponseSchema>